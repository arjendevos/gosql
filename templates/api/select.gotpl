// Generated by gosql: DO NOT EDIT.
package {{ .PackageName }}

import (
	"encoding/json"

	"github.com/volatiletech/sqlboiler/v4/queries/qm"
)

{{ range $controller := .Controllers }}
    func parse{{ .CamelName}}Selects(columns string) ([]string, error) {
        var columnValue []string
        if err := json.Unmarshal([]byte(columns), &columnValue); err != nil {
            return nil, err
        }

        return columnValue, nil
    }

    func parse{{ .CamelName}}SelectsToMods(columns []string) (qm.QueryMod, error) {
        var selectColumns []string
        for _, v := range columns {
            switch v {
            {{- range $column := .Columns }}

                {{- if .IsRelation}}
                    case "{{ .SnakeName }}_id":
                        selectColumns = append(selectColumns, "{{$controller.SnakeName}}.{{ .SnakeName }}_id")
                {{- else}}
                    case "{{ .SnakeName }}":
                        selectColumns = append(selectColumns, "{{$controller.SnakeName}}.{{ .SnakeName }}")
                {{- end}}
            {{- end }}
            }
        }

        return qm.Select(selectColumns...), nil
    }

{{- end}}